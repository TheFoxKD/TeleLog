# apps/telegram/bot.py

import asyncio

from asgiref.sync import sync_to_async
from django.conf import settings

from src.authentication.services import TelegramAuthService
from telegram import Update
from telegram.ext import ApplicationBuilder, CallbackContext, CommandHandler


class TeleLogBot:
    def __init__(self):
        self.auth_service = TelegramAuthService()
        self.application = (
            ApplicationBuilder().token(settings.TELEGRAM_BOT_TOKEN).build()
        )
        self.site_url = settings.SITE_URL
        start_handler = CommandHandler("start", self.handle_start)
        self.application.add_handler(start_handler)

    async def handle_start(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start —Å —Ç–æ–∫–µ–Ω–æ–º."""
        args = context.args
        if not args:
            await update.message.reply_text(
                "üëã –ü—Ä–∏–≤–µ—Ç! –ü–æ—Ö–æ–∂–µ, –≤—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.\n\n"
                "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É:\n"
                f"1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç {self.site_url}\n"
                "2. –ù–∞–∂–º–∏—Ç–µ '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram'\n"
                "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω —Å –∫–æ–º–∞–Ω–¥–æ–π /start\n\n"
                "–ü—Ä–∏–º–µ—Ä: /start your_token"
            )
            return

        token = args[0]
        if self.validate_token(token):
            telegram_data = update.effective_user.to_dict()
            user = await sync_to_async(self.auth_service.create_or_update_user)(
                telegram_data
            )
            await sync_to_async(self.auth_service.redis_client.setex)(
                f"auth_{token}", 300, user.id
            )
            await update.message.reply_text(
                "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ TeleLog!\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                f"‚Ä¢ –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç {self.site_url}\n\n"
                "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üöÄ"
            )
        else:
            await update.message.reply_text(
                "‚ùå –£–ø—Å! –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª.\n\n"
                "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                "‚Ä¢ –ò—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞\n"
                "‚Ä¢ –¢–æ–∫–µ–Ω —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω\n"
                "‚Ä¢ –û–ø–µ—á–∞—Ç–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–æ–∫–µ–Ω–∞\n\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç {self.site_url} –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω."
            )

    async def validate_token(self, token: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞."""
        exists = await sync_to_async(self.auth_service.redis_client.exists)(token)
        return exists

    def run(self):
        asyncio.run(self.application.run_polling())
