[project]
name = "telelog"
version = "0.1.0"
description = "Telegram Authentication System for Django"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Denis ðŸ¦Š (TheFoxKD)", email = "krishtopadenis@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "django-environ>=0.11.2",
    "django>=5.1.3",
    "psycopg>=3.2.3",
    "python-dotenv>=1.0.1",
    "python-telegram-bot>=21.8",
    "whitenoise>=6.8.2",
    "django-redis>=5.4.0",
    "python-jose>=3.3.0",
    "asgiref>=3.8.1",
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Security :: Authentication"
]
keywords = ["django", "telegram", "authentication", "oauth", "bot"]


[project.optional-dependencies]
dev = [
    "pytest-django>=4.9.0",
    "pytest>=8.3.4",
    "ruff>=0.8.1",
    "watchdog>=6.0.0",
]
prod = [
    "gunicorn>=23.0.0",
]

[dependency-groups]
dev = [
    "django-extensions>=3.2.3",
    "pytest-django>=4.9.0",
    "pytest>=8.3.4",
    "werkzeug>=3.1.3",
    "pytest-asyncio>=0.24.0",
    "pytest-sugar>=1.0.0",
    "pytest-factoryboy>=2.7.0",
    "coverage>=7.6.8",
    "factory-boy>=3.3.1",
    "faker>=33.1.0",
    "pytest-cov>=6.0.0",
    "python-coveralls>=2.9.3",
]


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
python_files = ["test_*.py", "*_test.py"]
addopts = """
    --ds=config.settings.test
    --reuse-db
    --tb=short
    --strict-markers
    --strict-config
    -v
    -p no:warnings
    --cov=src
    --cov-report=term-missing
    --cov-report=html
"""
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[tool.ruff]
line-length = 119
target-version = "py312"

[tool.ruff.lint]
# Never enforce `E501` (line length violations).
ignore = ["C901", "E501", "E741", "F402", "F823"]
select = ["C", "E", "F", "I", "W"]

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["django"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
